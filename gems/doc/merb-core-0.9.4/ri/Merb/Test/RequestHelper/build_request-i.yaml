--- !ruby/object:RI::MethodDescription 
aliases: []

block_params: 
comment: 
- !ruby/struct:SM::Flow::P 
  body: Prepares and returns a request suitable for dispatching with dispatch_request. If you don't need to modify the request object before dispatching (e.g. to add cookies), you probably want to use dispatch_to instead.
- !ruby/struct:SM::Flow::H 
  level: 4
  text: Parameters
- !ruby/object:SM::Flow::LIST 
  contents: 
  - !ruby/struct:SM::Flow::LI 
    label: "params<Hash>:"
    body: An optional hash that will end up as params in the controller instance.
  - !ruby/struct:SM::Flow::LI 
    label: "env<Hash>:"
    body: An optional hash that is passed to the fake request. Any request options should go here (see <tt>fake_request</tt>), including :req or :post_body for setting the request body itself.
  type: :NOTE
- !ruby/struct:SM::Flow::H 
  level: 4
  text: Example
- !ruby/struct:SM::Flow::VERB 
  body: "  req = build_request(:id =&gt; 1)\n  req.cookies['app_cookie'] = &quot;testing&quot;\n  dispatch_request(req, MyController, :edit)\n"
- !ruby/struct:SM::Flow::H 
  level: 4
  text: Notes
- !ruby/struct:SM::Flow::P 
  body: Does not use routes.
full_name: Merb::Test::RequestHelper#build_request
is_singleton: false
name: build_request
params: (params = {}, env = {})
visibility: public
