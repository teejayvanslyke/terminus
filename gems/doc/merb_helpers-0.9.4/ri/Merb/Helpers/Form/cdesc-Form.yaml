--- !ruby/object:RI::ClassDescription 
attributes: []

class_methods: []

comment: 
- !ruby/struct:SM::Flow::P 
  body: "Provides a number of methods for creating form tags which may be used either with or without the presence of ORM specific models. There are two types of form helpers: those that specifically work with model attributes and those that don't. This helper deals with both model attributes and generic form tags. Model attributes generally end in &quot;_control&quot; such as <tt>text_control</tt>, and generic tags end with &quot;_field&quot;, such as <tt>text_field</tt>"
- !ruby/struct:SM::Flow::P 
  body: "The core method of this helper, <tt>form_for</tt>, gives you the ability to create a form for a resource. For example, let's say that you have a model <tt>Person</tt> and want to create a new instance of it:"
- !ruby/struct:SM::Flow::VERB 
  body: "    &lt;% form_for :person, :action =&gt; url(:people) do %&gt;\n      &lt;%= text_control :first_name, :label =&gt; 'First Name' %&gt;\n      &lt;%= text_control :last_name,  :label =&gt; 'Last Name' %&gt;\n      &lt;%= submit_button 'Create' %&gt;\n    &lt;% end %&gt;\n"
- !ruby/struct:SM::Flow::P 
  body: "The HTML generated for this would be:"
- !ruby/struct:SM::Flow::VERB 
  body: "    &lt;form action=&quot;/people/create&quot; method=&quot;post&quot;&gt;\n      &lt;label for=&quot;person_first_name&quot;&gt;First Name&lt;/label&gt;\n      &lt;input id=&quot;person_first_name&quot; name=&quot;person[first_name]&quot; size=&quot;30&quot; type=&quot;text&quot; /&gt;\n      &lt;label for=&quot;person_last_name&quot;&gt;Last Name&lt;/label&gt;\n      &lt;input id=&quot;person_last_name&quot; name=&quot;person[last_name]&quot; size=&quot;30&quot; type=&quot;text&quot; /&gt;\n      &lt;button type=&quot;submit&quot;&gt;Create&lt;/button&gt;\n    &lt;/form&gt;\n"
- !ruby/struct:SM::Flow::P 
  body: You may also create a normal form using form_tag
- !ruby/struct:SM::Flow::VERB 
  body: "    &lt;% form_tag(:action =&gt; url(:controller =&gt; &quot;foo&quot;, :action =&gt; &quot;bar&quot;, :id =&gt; 1)) do %&gt;\n      &lt;%= text_field :name =&gt; 'first_name', :label =&gt; 'First Name' %&gt;\n      &lt;%= submit_button 'Create' %&gt;\n    &lt;% end %&gt;\n"
- !ruby/struct:SM::Flow::P 
  body: "The HTML generated for this would be:"
- !ruby/struct:SM::Flow::VERB 
  body: "    &lt;form action=&quot;/foo/bar/1&quot; method=&quot;post&quot;&gt;\n      &lt;label for=&quot;first_name&quot;&gt;First Name&lt;/label&gt;&lt;input id=&quot;first_name&quot; name=&quot;first_name&quot; size=&quot;30&quot; type=&quot;text&quot; /&gt;\n      &lt;button type=&quot;submit&quot;&gt;Create&lt;/button&gt;\n    &lt;/form&gt;\n"
constants: []

full_name: Merb::Helpers::Form
includes: []

instance_methods: 
- !ruby/object:RI::MethodSummary 
  name: checkbox_control
- !ruby/object:RI::MethodSummary 
  name: checkbox_field
- !ruby/object:RI::MethodSummary 
  name: control_id
- !ruby/object:RI::MethodSummary 
  name: control_name
- !ruby/object:RI::MethodSummary 
  name: control_name_value
- !ruby/object:RI::MethodSummary 
  name: control_value
- !ruby/object:RI::MethodSummary 
  name: delete_button
- !ruby/object:RI::MethodSummary 
  name: error_messages_for
- !ruby/object:RI::MethodSummary 
  name: fields_for
- !ruby/object:RI::MethodSummary 
  name: fieldset
- !ruby/object:RI::MethodSummary 
  name: file_control
- !ruby/object:RI::MethodSummary 
  name: file_field
- !ruby/object:RI::MethodSummary 
  name: form_for
- !ruby/object:RI::MethodSummary 
  name: form_tag
- !ruby/object:RI::MethodSummary 
  name: hidden_control
- !ruby/object:RI::MethodSummary 
  name: hidden_field
- !ruby/object:RI::MethodSummary 
  name: label
- !ruby/object:RI::MethodSummary 
  name: obj_from_ivar_or_sym
- !ruby/object:RI::MethodSummary 
  name: options_for_select
- !ruby/object:RI::MethodSummary 
  name: options_from_collection_for_select
- !ruby/object:RI::MethodSummary 
  name: password_control
- !ruby/object:RI::MethodSummary 
  name: password_field
- !ruby/object:RI::MethodSummary 
  name: radio_control
- !ruby/object:RI::MethodSummary 
  name: radio_field
- !ruby/object:RI::MethodSummary 
  name: radio_group_control
- !ruby/object:RI::MethodSummary 
  name: select_control
- !ruby/object:RI::MethodSummary 
  name: select_field
- !ruby/object:RI::MethodSummary 
  name: submit_button
- !ruby/object:RI::MethodSummary 
  name: submit_field
- !ruby/object:RI::MethodSummary 
  name: text_area_control
- !ruby/object:RI::MethodSummary 
  name: text_area_field
- !ruby/object:RI::MethodSummary 
  name: text_control
- !ruby/object:RI::MethodSummary 
  name: text_field
name: Form
superclass: 
