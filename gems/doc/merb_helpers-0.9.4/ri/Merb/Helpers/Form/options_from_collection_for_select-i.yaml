--- !ruby/object:RI::MethodDescription 
aliases: []

block_params: 
comment: 
- !ruby/struct:SM::Flow::P 
  body: Returns a string of option tags that have been compiled by iterating over the collection and assigning the the result of a call to the value_method as the option value and the text_method as the option text. If selected_value is specified, the element returning a match on the value_method option will get the selected option tag.
- !ruby/struct:SM::Flow::P 
  body: This method also also supports the automatic generation of optgroup tags by using a hash.
- !ruby/struct:SM::Flow::H 
  level: 4
  text: Examples
- !ruby/struct:SM::Flow::P 
  body: If we had a collection of people within a @project object, and want to use 'id' as the value, and 'name' as the option content we could do something similar to this;
- !ruby/struct:SM::Flow::VERB 
  body: "  &lt;%= options_from_collection_for_select(@project.people, :value_method =&gt; &quot;id&quot;, :text_method =&gt; &quot;name&quot;) %&gt;\n  The iteration of the collection would create options in this manner;\n  =&gt;  &lt;option value=&quot;#{person.id}&quot;&gt;#{person.name}&lt;/option&gt;\n\n  &lt;% @people = Person.find(:all).group_by( &amp;:state )\n  &lt;%= options_for_select(@people, :text_method =&gt; 'full_name', :value_method =&gt; 'id', :selected =&gt; 3) %&gt;\n  =&gt; &lt;optgroup label=&quot;Washington&quot;&gt;&lt;option value=&quot;1&quot;&gt;Josh Martin&lt;/option&gt;&lt;option value=&quot;2&quot;&gt;John Doe&lt;/option&gt;&lt;/optgroup&gt;\n  =&gt; &lt;optgroup label=&quot;Idaho&quot;&gt;&lt;option value=&quot;3&quot; selected=&quot;selected&quot;&gt;Jane Doe&lt;/option&gt;\n"
- !ruby/struct:SM::Flow::H 
  level: 4
  text: Options
- !ruby/object:SM::Flow::LIST 
  contents: 
  - !ruby/struct:SM::Flow::LI 
    label: "+text_method+:"
    body: Defines the method which will be used to provide the text of the option tags (required)
  - !ruby/struct:SM::Flow::LI 
    label: "+value_method+:"
    body: Defines the method which will be used to provide the value of the option tags (required)
  - !ruby/struct:SM::Flow::LI 
    label: "+selected+:"
    body: The value of a selected object, may be either a string or an array.
  type: :NOTE
full_name: Merb::Helpers::Form#options_from_collection_for_select
is_singleton: false
name: options_from_collection_for_select
params: (collection, attrs = {})
visibility: public
